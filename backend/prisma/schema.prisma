// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  accountId String    @unique
  hash      String    @unique
  validated Boolean   @default(false)
  roles     String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  profile   Profile[]
  stories   Story[]
  tags      Tag[]
}

model Profile {
  id        Int       @id @default(autoincrement())
  firstname String
  lastname  String
  birthdate DateTime?
  gender    String?
  avatarUrl String?
  bio       String?
  langs     String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
}

model Story {
  id               Int      @id @default(autoincrement())
  title            String
  content          String
  lesson           String?
  published        Boolean  @default(false)
  lang             String   @default("en")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userId           Int
  topicId          Int
  translationRefId Int?
  user             User     @relation(fields: [userId], references: [id])
  topic            Topic    @relation(fields: [topicId], references: [id])
  tags             Tag[]
  translations     Story[]  @relation("StoryTranslations")
  translationRef   Story?   @relation("StoryTranslations", fields: [translationRefId], references: [id])
}

model Topic {
  id               Int      @id @default(autoincrement())
  name             String
  lang             String   @default("en")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  translationRefId Int?
  stories          Story[]
  translations     Topic[]  @relation("TopicTranslations")
  translationRef   Topic?   @relation("TopicTranslations", fields: [translationRefId], references: [id])
}

model Tag {
  id               Int      @id @default(autoincrement())
  name             String
  lang             String   @default("en")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  translationRefId Int?
  meaningRefId     Int?
  stories          Story[]
  translations     Tag[]    @relation("TagTranslations")
  translationRef   Tag?     @relation("TagTranslations", fields: [translationRefId], references: [id])
  meanings         Tag[]    @relation("TagMeanings")
  meaningRef       Tag?     @relation("TagMeanings", fields: [meaningRefId], references: [id])
  user             User     @relation(fields: [userId], references: [id])
  userId           Int
}
